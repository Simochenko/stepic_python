'''Тема урока: строковые методы
Метод split()
Метод join()
Аннотация. Строковые методы split() и join().

В предыдущем модуле мы детально изучили основные строковые методы, однако обошли стороной два важных: split() и join(),
 имеющих отношение к спискам. Они как бы противоположны по смыслу: метод split() разбивает строку по произвольному
 разделителю на список слов, а метод join() собирает строку из списка слов через заданный разделитель.

Метод split()
Метод split() разбивает строку на слова, используя в качестве разделителя последовательность пробельных символов.

Следующий программный код:

s = 'Python is the most powerful language'
words = s.split()
print(words)
выведет:

['Python', 'is', 'the', 'most', 'powerful', 'language']


Таким образом, вызов метода split() разбивает строку на слова и возвращает список, содержащий все слова.

Рассмотрим следующий программный код:

numbers = input().split()
Если при запуске этой программы ввести строку 1 2 3 4 5, то список numbers будет следующим  ['1', '2', '3', '4', '5'].
Обратите внимание, что список будет состоять из строк, а не из чисел. Если требуется получить именно список чисел, то
 затем нужно элементы списка по одному преобразовать в числа:

numbers = input().split()
for i in range(len(numbers)):
    numbers[i] = int(numbers[i])
Необязательный параметр
У метода split() есть необязательный параметр, который определяет, какой набор символов будет использоваться в качестве
 разделителя между элементами списка. Например, вызов метода split('.') вернет список, полученный разделением исходной
 строки по символу '.'.

Следующий программный код:

ip = '192.168.1.24'
numbers = ip.split('.')    # указываем явно разделитель
print(numbers)
выведет список:

['192', '168', '1', '24']

Метод join()
Метод join() собирает строку из элементов списка, используя в качестве разделителя строку, к которой применяется метод.

 Следующий программный код:

words = ['Python', 'is', 'the', 'most', 'powerful', 'language']
s = ' '.join(words)
print(s)
выведет:

Python is the most powerful language


Обратите внимание, все слова разделены одним пробелом, поскольку метод join() вызывался на строке состоящей из одного
символа пробела ' '.

Рассмотрим еще пару примеров:

words = ['Мы', 'учим', 'язык', 'Python']
print('*'.join(words))
print('-'.join(words))
print('?'.join(words))
print('!'.join(words))
print('*****'.join(words))
print('abc'.join(words))
print('123'.join(words))
Результатом выполнения такого кода будет:

Мы*учим*язык*Python
Мы-учим-язык-Python
Мы?учим?язык?Python
Мы!учим!язык!Python
Мы*****учим*****язык*****Python
МыabcучимabcязыкabcPython
Мы123учим123язык123Python
Запомни: Строковый метод split() служит для преобразования строки в список, а метод join() — для преобразования списка
 в строку.

Примечания
Примечание 1. Существует большая разница между результатами вызова методов s.split() и s.split(' '). Разница в
поведении проявляется когда строка содержит несколько пробелов между словами.

Следующий программный код:

s = 'Python    is   the  most  powerful  language'
words1 = s.split()
words2 = s.split(' ')
print(words1)
print(words2)
 выведет списки:

['Python', 'is', 'the', 'most', 'powerful', 'language']
['Python', '', '', '', 'is', '', '', 'the', '', 'most', '', 'powerful', '', 'language']
Примечание 2. Методы split() и join() являются строковыми методами. Следующий код приводит к ошибке:

print([1, 2].split())
print([1, 2].join([3, 4, 5]))
Примечание 3. Строковый метод join() работает только со списком строк. Следующий код приводит к ошибке:

numbers = [1, 2, 3, 4]  # список чисел
s = '*'.join(numbers)
print(s)'''
# s = 'BEEGEEK'
# chars = list(s)
# s = '**'.join(chars)
# print(s)

'''Построчный вывод
На вход программе подается строка текста. Напишите программу, которая выводит слова введенной строки в столбик.

Формат входных данных
На вход программе подается строка текста.

Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.

Sample Input:

У лукоморья дуб зеленый златая цепь на дубе том
Sample Output:

У
лукоморья
дуб
зеленый
златая
цепь
на
дубе
том'''

# n = input()
# words1 = n.split()
# print(*words1, sep='\n')
'''Инициалы
На вход программе подается строка текста, содержащая имя, отчество и фамилию человека. Напишите программу, 
которая выводит инициалы человека.
Формат входных данных
На вход программе подается строка текста, содержащая имя, отчество и фамилию человека.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input:
Владимир Семенович Высоцкий
Sample Output:
В.С.В.'''
# s = input().split()
# w = s[0][0]
# c = s[1][0]
# v = s[2][0]
# print(w, end='.')
# print(c, end='.')
# print(v, end='.')

'''Windows OS
В операционной системе Windows полное имя файла состоит из буквы диска, после которого ставится двоеточие и символ \
 затем через такой же символ перечисляются подкаталоги (папки), в которых находится файл, в конце пишется имя 
 файла (C:\Windows\System32\calc.exe).
На вход программе подается одна строка с корректным именем файла в операционной системе Windows. Напишите программу, 
которая разбирает строку на части, разделенные символом "\.
 Каждую часть вывести в отдельной строке. 
Формат входных данных
На вход программе подается одна строка.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input:
C:\Windows\System32\calc.exe
Sample Output:
C:
Windows
System32
calc.exe
'''
# s = input().split('\\')
# print(*s, sep='\n')

'''Диаграмма
На вход программе подается строка текста, содержащая целые числа. Напишите программу, которая по заданным числам 
строит столбчатую диаграмму.
Формат входных данных
На вход программе подается строка текста, содержащая целые числа, разделенных символом пробела.
Формат выходных данных
Программа должна вывести столбчатую диаграмму.'''
# numbers = input().split()
# for i in range(len(numbers)):
#     numbers[i] = int(numbers[i])
#     print((numbers[i])*'+')

'''Корректный ip-адрес
На вход программе подается строка текста, содержащая 4 целых числа разделенных точкой. Напишите программу, которая 
определяет является ли введенная строка текста корректным ip-адресом.
Формат входных данных
На вход программе подается строка текста, содержащая 4 целых числа разделенных точкой.
Формат выходных данных
Программа должна вывести «ДА», если введеная строка является корректным ip-адресом, и «НЕТ» — в противном случае.
Примечание. ip-адрес является корректным, если все 4 числа находятся в диапазоне от 0 до 255 включительно.
Sample Input 1:
192.168.0.3
Sample Output 1:
ДА
Sample Input 2:
192.168.0.300
Sample Output 2:
НЕТ
'''
# ip = input()
# numbers = ip.split('.')
# for i in range(len(numbers)):
#     numbers[i] = int(numbers[i])
#
#     if int(numbers[i]) > 255:
#         print('НЕТ')
#         break
# else:
#     print('ДА')

'''Добавь разделитель
На вход программе подается строка текста и строка разделитель. Напишите программу, которая вставляет указанный 
разделитель между каждым символом введенной строки текста.
Формат входных данных
На вход программе подается строка текста и строка разделитель, каждая на отдельной строке
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.'''
# s = input()
# # r = input()
# # s = r.join(s)
# # print(s)

# a = [int(s) for s in input().split()]
# count = 0
# for i in range(len(a)):
#     for j in range(i + 1, len(a)):
#         if a[i] == a[j]:
#             count += 1
# print(count)
